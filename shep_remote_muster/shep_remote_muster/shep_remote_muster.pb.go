// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.6
// source: shep_remote_muster/shep_remote_muster.proto

package shep_remote_muster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShepRequest uint32 `protobuf:"varint,1,opt,name=shep_request,json=shepRequest,proto3" json:"shep_request,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{0}
}

func (x *HeartbeatRequest) GetShepRequest() uint32 {
	if x != nil {
		return x.ShepRequest
	}
	return 0
}

type HeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShepRequest uint32 `protobuf:"varint,1,opt,name=shep_request,json=shepRequest,proto3" json:"shep_request,omitempty"`
	MusterReply string `protobuf:"bytes,2,opt,name=muster_reply,json=musterReply,proto3" json:"muster_reply,omitempty"`
}

func (x *HeartbeatReply) Reset() {
	*x = HeartbeatReply{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReply) ProtoMessage() {}

func (x *HeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReply.ProtoReflect.Descriptor instead.
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{1}
}

func (x *HeartbeatReply) GetShepRequest() uint32 {
	if x != nil {
		return x.ShepRequest
	}
	return 0
}

func (x *HeartbeatReply) GetMusterReply() string {
	if x != nil {
		return x.MusterReply
	}
	return ""
}

type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []uint64 `protobuf:"varint,1,rep,packed,name=vals,proto3" json:"vals,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{2}
}

func (x *LogEntry) GetVals() []uint64 {
	if x != nil {
		return x.Vals
	}
	return nil
}

type SyncLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheepId  string    `protobuf:"bytes,1,opt,name=sheep_id,json=sheepId,proto3" json:"sheep_id,omitempty"`
	LogId    string    `protobuf:"bytes,2,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	LogEntry *LogEntry `protobuf:"bytes,3,opt,name=log_entry,json=logEntry,proto3" json:"log_entry,omitempty"`
}

func (x *SyncLogRequest) Reset() {
	*x = SyncLogRequest{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogRequest) ProtoMessage() {}

func (x *SyncLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogRequest.ProtoReflect.Descriptor instead.
func (*SyncLogRequest) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{3}
}

func (x *SyncLogRequest) GetSheepId() string {
	if x != nil {
		return x.SheepId
	}
	return ""
}

func (x *SyncLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *SyncLogRequest) GetLogEntry() *LogEntry {
	if x != nil {
		return x.LogEntry
	}
	return nil
}

type SyncLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncComplete bool `protobuf:"varint,1,opt,name=sync_complete,json=syncComplete,proto3" json:"sync_complete,omitempty"`
}

func (x *SyncLogReply) Reset() {
	*x = SyncLogReply{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogReply) ProtoMessage() {}

func (x *SyncLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogReply.ProtoReflect.Descriptor instead.
func (*SyncLogReply) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{4}
}

func (x *SyncLogReply) GetSyncComplete() bool {
	if x != nil {
		return x.SyncComplete
	}
	return false
}

type ControlEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CtrlId string `protobuf:"bytes,1,opt,name=ctrl_id,json=ctrlId,proto3" json:"ctrl_id,omitempty"`
	Val    uint64 `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *ControlEntry) Reset() {
	*x = ControlEntry{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlEntry) ProtoMessage() {}

func (x *ControlEntry) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlEntry.ProtoReflect.Descriptor instead.
func (*ControlEntry) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{5}
}

func (x *ControlEntry) GetCtrlId() string {
	if x != nil {
		return x.CtrlId
	}
	return ""
}

func (x *ControlEntry) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type ControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheepId   string        `protobuf:"bytes,1,opt,name=sheep_id,json=sheepId,proto3" json:"sheep_id,omitempty"`
	CtrlEntry *ControlEntry `protobuf:"bytes,2,opt,name=ctrl_entry,json=ctrlEntry,proto3" json:"ctrl_entry,omitempty"`
}

func (x *ControlRequest) Reset() {
	*x = ControlRequest{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRequest) ProtoMessage() {}

func (x *ControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRequest.ProtoReflect.Descriptor instead.
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{6}
}

func (x *ControlRequest) GetSheepId() string {
	if x != nil {
		return x.SheepId
	}
	return ""
}

func (x *ControlRequest) GetCtrlEntry() *ControlEntry {
	if x != nil {
		return x.CtrlEntry
	}
	return nil
}

type ControlReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CtrlComplete bool `protobuf:"varint,1,opt,name=ctrl_complete,json=ctrlComplete,proto3" json:"ctrl_complete,omitempty"`
}

func (x *ControlReply) Reset() {
	*x = ControlReply{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlReply) ProtoMessage() {}

func (x *ControlReply) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlReply.ProtoReflect.Descriptor instead.
func (*ControlReply) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{7}
}

func (x *ControlReply) GetCtrlComplete() bool {
	if x != nil {
		return x.CtrlComplete
	}
	return false
}

type CoordinateLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheepId       string `protobuf:"bytes,1,opt,name=sheep_id,json=sheepId,proto3" json:"sheep_id,omitempty"`
	LogId         string `protobuf:"bytes,2,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	CoordinateCmd string `protobuf:"bytes,3,opt,name=coordinate_cmd,json=coordinateCmd,proto3" json:"coordinate_cmd,omitempty"`
}

func (x *CoordinateLogRequest) Reset() {
	*x = CoordinateLogRequest{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinateLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinateLogRequest) ProtoMessage() {}

func (x *CoordinateLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinateLogRequest.ProtoReflect.Descriptor instead.
func (*CoordinateLogRequest) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{8}
}

func (x *CoordinateLogRequest) GetSheepId() string {
	if x != nil {
		return x.SheepId
	}
	return ""
}

func (x *CoordinateLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *CoordinateLogRequest) GetCoordinateCmd() string {
	if x != nil {
		return x.CoordinateCmd
	}
	return ""
}

type CoordinateLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheepId       string `protobuf:"bytes,1,opt,name=sheep_id,json=sheepId,proto3" json:"sheep_id,omitempty"`
	LogId         string `protobuf:"bytes,2,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Status        bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	CoordinateCmd string `protobuf:"bytes,4,opt,name=coordinate_cmd,json=coordinateCmd,proto3" json:"coordinate_cmd,omitempty"`
}

func (x *CoordinateLogReply) Reset() {
	*x = CoordinateLogReply{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinateLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinateLogReply) ProtoMessage() {}

func (x *CoordinateLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinateLogReply.ProtoReflect.Descriptor instead.
func (*CoordinateLogReply) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{9}
}

func (x *CoordinateLogReply) GetSheepId() string {
	if x != nil {
		return x.SheepId
	}
	return ""
}

func (x *CoordinateLogReply) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *CoordinateLogReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CoordinateLogReply) GetCoordinateCmd() string {
	if x != nil {
		return x.CoordinateCmd
	}
	return ""
}

type CoordinateCtrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheepId string `protobuf:"bytes,1,opt,name=sheep_id,json=sheepId,proto3" json:"sheep_id,omitempty"`
	CtrlId  string `protobuf:"bytes,2,opt,name=ctrl_id,json=ctrlId,proto3" json:"ctrl_id,omitempty"`
}

func (x *CoordinateCtrlRequest) Reset() {
	*x = CoordinateCtrlRequest{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinateCtrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinateCtrlRequest) ProtoMessage() {}

func (x *CoordinateCtrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinateCtrlRequest.ProtoReflect.Descriptor instead.
func (*CoordinateCtrlRequest) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{10}
}

func (x *CoordinateCtrlRequest) GetSheepId() string {
	if x != nil {
		return x.SheepId
	}
	return ""
}

func (x *CoordinateCtrlRequest) GetCtrlId() string {
	if x != nil {
		return x.CtrlId
	}
	return ""
}

type CoordinateCtrlReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheepId string `protobuf:"bytes,1,opt,name=sheep_id,json=sheepId,proto3" json:"sheep_id,omitempty"`
	CtrlId  string `protobuf:"bytes,2,opt,name=ctrl_id,json=ctrlId,proto3" json:"ctrl_id,omitempty"`
	CtrlVal uint64 `protobuf:"varint,3,opt,name=ctrl_val,json=ctrlVal,proto3" json:"ctrl_val,omitempty"`
}

func (x *CoordinateCtrlReply) Reset() {
	*x = CoordinateCtrlReply{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinateCtrlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinateCtrlReply) ProtoMessage() {}

func (x *CoordinateCtrlReply) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinateCtrlReply.ProtoReflect.Descriptor instead.
func (*CoordinateCtrlReply) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{11}
}

func (x *CoordinateCtrlReply) GetSheepId() string {
	if x != nil {
		return x.SheepId
	}
	return ""
}

func (x *CoordinateCtrlReply) GetCtrlId() string {
	if x != nil {
		return x.CtrlId
	}
	return ""
}

func (x *CoordinateCtrlReply) GetCtrlVal() uint64 {
	if x != nil {
		return x.CtrlVal
	}
	return 0
}

type CompleteRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheepId  string `protobuf:"bytes,1,opt,name=sheep_id,json=sheepId,proto3" json:"sheep_id,omitempty"`
	MusterId string `protobuf:"bytes,2,opt,name=muster_id,json=musterId,proto3" json:"muster_id,omitempty"`
}

func (x *CompleteRunRequest) Reset() {
	*x = CompleteRunRequest{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRunRequest) ProtoMessage() {}

func (x *CompleteRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRunRequest.ProtoReflect.Descriptor instead.
func (*CompleteRunRequest) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{12}
}

func (x *CompleteRunRequest) GetSheepId() string {
	if x != nil {
		return x.SheepId
	}
	return ""
}

func (x *CompleteRunRequest) GetMusterId() string {
	if x != nil {
		return x.MusterId
	}
	return ""
}

type CompleteRunReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunComplete bool `protobuf:"varint,1,opt,name=run_complete,json=runComplete,proto3" json:"run_complete,omitempty"`
}

func (x *CompleteRunReply) Reset() {
	*x = CompleteRunReply{}
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRunReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRunReply) ProtoMessage() {}

func (x *CompleteRunReply) ProtoReflect() protoreflect.Message {
	mi := &file_shep_remote_muster_shep_remote_muster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRunReply.ProtoReflect.Descriptor instead.
func (*CompleteRunReply) Descriptor() ([]byte, []int) {
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP(), []int{13}
}

func (x *CompleteRunReply) GetRunComplete() bool {
	if x != nil {
		return x.RunComplete
	}
	return false
}

var File_shep_remote_muster_shep_remote_muster_proto protoreflect.FileDescriptor

var file_shep_remote_muster_shep_remote_muster_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x68, 0x65, 0x70, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x68, 0x65, 0x70, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x65,
	0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x73, 0x68, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x0e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x68, 0x65, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x68, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04,
	0x76, 0x61, 0x6c, 0x73, 0x22, 0x71, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x65, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x70, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x74, 0x72, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x74, 0x72, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x60, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65,
	0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65,
	0x65, 0x70, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x63, 0x74, 0x72, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x74, 0x72,
	0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x63, 0x74, 0x72, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x6f,
	0x0a, 0x14, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x65, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x70, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x22,
	0x85, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x65, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x70, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x74, 0x72, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x74,
	0x72, 0x6c, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x13, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x68, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x74, 0x72, 0x6c, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x74, 0x72, 0x6c, 0x56, 0x61, 0x6c, 0x22, 0x4c, 0x0a, 0x12, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x75, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x32,
	0x48, 0x0a, 0x05, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x49, 0x0a, 0x03, 0x4c, 0x6f, 0x67,
	0x12, 0x42, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x28, 0x01, 0x32, 0x4b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x40, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x16, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28,
	0x01, 0x32, 0xf0, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x12, 0x4b, 0x0a, 0x0d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x12, 0x1c, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x0e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x74, 0x72, 0x6c, 0x12,
	0x1d, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x1a, 0x2e, 0x6d,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x77, 0x61, 0x64, 0x79, 0x6e, 0x2f, 0x73, 0x68, 0x65, 0x70, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x75, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shep_remote_muster_shep_remote_muster_proto_rawDescOnce sync.Once
	file_shep_remote_muster_shep_remote_muster_proto_rawDescData = file_shep_remote_muster_shep_remote_muster_proto_rawDesc
)

func file_shep_remote_muster_shep_remote_muster_proto_rawDescGZIP() []byte {
	file_shep_remote_muster_shep_remote_muster_proto_rawDescOnce.Do(func() {
		file_shep_remote_muster_shep_remote_muster_proto_rawDescData = protoimpl.X.CompressGZIP(file_shep_remote_muster_shep_remote_muster_proto_rawDescData)
	})
	return file_shep_remote_muster_shep_remote_muster_proto_rawDescData
}

var file_shep_remote_muster_shep_remote_muster_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_shep_remote_muster_shep_remote_muster_proto_goTypes = []any{
	(*HeartbeatRequest)(nil),      // 0: muster.HeartbeatRequest
	(*HeartbeatReply)(nil),        // 1: muster.HeartbeatReply
	(*LogEntry)(nil),              // 2: muster.LogEntry
	(*SyncLogRequest)(nil),        // 3: muster.SyncLogRequest
	(*SyncLogReply)(nil),          // 4: muster.SyncLogReply
	(*ControlEntry)(nil),          // 5: muster.ControlEntry
	(*ControlRequest)(nil),        // 6: muster.ControlRequest
	(*ControlReply)(nil),          // 7: muster.ControlReply
	(*CoordinateLogRequest)(nil),  // 8: muster.CoordinateLogRequest
	(*CoordinateLogReply)(nil),    // 9: muster.CoordinateLogReply
	(*CoordinateCtrlRequest)(nil), // 10: muster.CoordinateCtrlRequest
	(*CoordinateCtrlReply)(nil),   // 11: muster.CoordinateCtrlReply
	(*CompleteRunRequest)(nil),    // 12: muster.CompleteRunRequest
	(*CompleteRunReply)(nil),      // 13: muster.CompleteRunReply
}
var file_shep_remote_muster_shep_remote_muster_proto_depIdxs = []int32{
	2,  // 0: muster.SyncLogRequest.log_entry:type_name -> muster.LogEntry
	5,  // 1: muster.ControlRequest.ctrl_entry:type_name -> muster.ControlEntry
	0,  // 2: muster.Pulse.HeartBeat:input_type -> muster.HeartbeatRequest
	3,  // 3: muster.Log.SyncLogBuffers:input_type -> muster.SyncLogRequest
	6,  // 4: muster.Control.ApplyControl:input_type -> muster.ControlRequest
	8,  // 5: muster.Coordinate.CoordinateLog:input_type -> muster.CoordinateLogRequest
	10, // 6: muster.Coordinate.CoordinateCtrl:input_type -> muster.CoordinateCtrlRequest
	12, // 7: muster.Coordinate.CompleteRun:input_type -> muster.CompleteRunRequest
	1,  // 8: muster.Pulse.HeartBeat:output_type -> muster.HeartbeatReply
	4,  // 9: muster.Log.SyncLogBuffers:output_type -> muster.SyncLogReply
	7,  // 10: muster.Control.ApplyControl:output_type -> muster.ControlReply
	9,  // 11: muster.Coordinate.CoordinateLog:output_type -> muster.CoordinateLogReply
	11, // 12: muster.Coordinate.CoordinateCtrl:output_type -> muster.CoordinateCtrlReply
	13, // 13: muster.Coordinate.CompleteRun:output_type -> muster.CompleteRunReply
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_shep_remote_muster_shep_remote_muster_proto_init() }
func file_shep_remote_muster_shep_remote_muster_proto_init() {
	if File_shep_remote_muster_shep_remote_muster_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shep_remote_muster_shep_remote_muster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_shep_remote_muster_shep_remote_muster_proto_goTypes,
		DependencyIndexes: file_shep_remote_muster_shep_remote_muster_proto_depIdxs,
		MessageInfos:      file_shep_remote_muster_shep_remote_muster_proto_msgTypes,
	}.Build()
	File_shep_remote_muster_shep_remote_muster_proto = out.File
	file_shep_remote_muster_shep_remote_muster_proto_rawDesc = nil
	file_shep_remote_muster_shep_remote_muster_proto_goTypes = nil
	file_shep_remote_muster_shep_remote_muster_proto_depIdxs = nil
}
